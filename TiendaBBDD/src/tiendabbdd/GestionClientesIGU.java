package tiendabbdd;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 * ESTARIA BIEN AÃ‘ADIR LO DE DESABILIRAR LOS BOTONES SI LA BASE DE DATOS ESTA
 * VACIA
 *
 * @author AlumnoT
 */
public class GestionClientesIGU extends javax.swing.JFrame {

    private final String URL = "jdbc:mysql://localhost:3306/tienda?serverTimezone=UTC";
    private final String DBUSER = "root";
    private final String DBPASS = "Dam2324";
    private final BDManager con;

    /**
     * Creates new form GestionClientesIGU
     */
    public GestionClientesIGU() {
        initComponents();
        con = new BDManager(URL, DBUSER, DBPASS);
        if (con.obtenerConexion()) {
            if (!con.obtenerClientes()) {
                System.err.println("[ERROR] No se pudo obtener los datos de los clientes.");
            }
        } else {
            System.err.println("[ERROR] No se pudo establecer conexion con la base de datos.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nuevoFrame = new javax.swing.JFrame();
        tituloLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        sigButton = new javax.swing.JButton();
        primeroButton = new javax.swing.JButton();
        anteButton = new javax.swing.JButton();
        ultimoButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        borrarButton = new javax.swing.JButton();
        editarButton = new javax.swing.JButton();
        nuevoButton = new javax.swing.JButton();
        dirLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textNombre = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textDir = new javax.swing.JTextArea();
        btnExport = new javax.swing.JButton();

        javax.swing.GroupLayout nuevoFrameLayout = new javax.swing.GroupLayout(nuevoFrame.getContentPane());
        nuevoFrame.getContentPane().setLayout(nuevoFrameLayout);
        nuevoFrameLayout.setHorizontalGroup(
            nuevoFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        nuevoFrameLayout.setVerticalGroup(
            nuevoFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tituloLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        tituloLabel.setText("GESTOR DE CLIENTES");

        sigButton.setText(">>");
        sigButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sigButtonActionPerformed(evt);
            }
        });

        primeroButton.setText("|<");
        primeroButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                primeroButtonActionPerformed(evt);
            }
        });

        anteButton.setText("<<");
        anteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anteButtonActionPerformed(evt);
            }
        });

        ultimoButton.setText(">|");
        ultimoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ultimoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(primeroButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(anteButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sigButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ultimoButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ultimoButton)
                    .addComponent(sigButton)
                    .addComponent(anteButton)
                    .addComponent(primeroButton))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        borrarButton.setText("Borrar");
        borrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarButtonActionPerformed(evt);
            }
        });

        editarButton.setText("Editar");
        editarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarButtonActionPerformed(evt);
            }
        });

        nuevoButton.setText("Nuevo");
        nuevoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nuevoButton)
                .addGap(18, 18, 18)
                .addComponent(editarButton)
                .addGap(18, 18, 18)
                .addComponent(borrarButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nuevoButton)
                    .addComponent(editarButton)
                    .addComponent(borrarButton))
                .addContainerGap())
        );

        dirLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        dirLabel.setText("Direccion:");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Nombre:");

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        textNombre.setColumns(20);
        textNombre.setRows(5);
        jScrollPane2.setViewportView(textNombre);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        textDir.setColumns(20);
        textDir.setRows(5);
        jScrollPane1.setViewportView(textDir);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );

        btnExport.setText("Exportar lista de clientes");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dirLabel)
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(btnExport)
                        .addGap(39, 39, 39)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(tituloLabel)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(tituloLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(dirLabel)))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void primeroButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_primeroButtonActionPerformed
        String[] cliente = con.mostrarPrimero();
        if (cliente != null) {
            textNombre.setText(cliente[0]);
            textDir.setText(cliente[1]);
        } else {
            textNombre.setText("Nombre no disponible");
            textDir.setText("Direccion no disponible");
        }
    }//GEN-LAST:event_primeroButtonActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        ResultSet rs = con.obtenerClientesResultSet();
        if (rs == null) {
            JOptionPane.showMessageDialog(this, "No hay datos en la BBDD.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        File f = new File("clientes.txt");
        try (FileWriter writer = new FileWriter(f, false)) {
            boolean primera = true;
            // Mover el cursor al inicio del ResultSet
            if (rs.first()) {
                // Escribir los datos en el archivo
                do {
                    if (primera) {
                        writer.write("Nombre \t Direccion\n");
                        primera = false;
                    }
                    String nombre = rs.getString("nombre");
                    String direccion = rs.getString("direccion");
                    writer.write(nombre + "\t" + direccion + "\n");
                } while (rs.next());
                JOptionPane.showMessageDialog(this, "Clientes exportados con exito en el archivo clientes.txt");
            } else {
                JOptionPane.showMessageDialog(this, "No se pudieron obtener los clientes", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (IOException ex) {
            Logger.getLogger(GestionClientesIGU.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GestionClientesIGU.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnExportActionPerformed

    private void ultimoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ultimoButtonActionPerformed
        String[] cliente = con.mostrarUltimo();
        if (cliente != null) {
            textNombre.setText(cliente[0]);
            textDir.setText(cliente[1]);
        } else {
            textNombre.setText("Nombre no disponible");
            textDir.setText("Direccion no disponible");
        }
    }//GEN-LAST:event_ultimoButtonActionPerformed

    private void anteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anteButtonActionPerformed
        String[] cliente = con.mostrarAnterior();
        if (cliente != null) {
            textNombre.setText(cliente[0]);
            textDir.setText(cliente[1]);
        } else {
            textNombre.setText("Nombre no disponible");
            textDir.setText("Direccion no disponible");
        }
    }//GEN-LAST:event_anteButtonActionPerformed

    private void sigButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sigButtonActionPerformed
        String[] cliente = con.mostrarSiguiente();
        if (cliente != null) {
            textNombre.setText(cliente[0]);
            textDir.setText(cliente[1]);
        } else {
            textNombre.setText("Nombre no disponible");
            textDir.setText("Direccion no disponible");
        }
    }//GEN-LAST:event_sigButtonActionPerformed

    private void nuevoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoButtonActionPerformed

        String nombre = textNombre.getText().trim();
        String direccion = textDir.getText().trim();

        //Primero verificamos que los campos no estan vacios y si lo estan un return para que no siga la ejecucion 
        if (nombre.isEmpty() || direccion.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, rellene ambos campos antes de agregar un cliente.", "Campos vacios", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (con.insertarCliente(nombre, direccion)) {
            JOptionPane.showMessageDialog(this, "Nuevo cliente agregado con exito.");
            //Limpiar los campos de texto
            textNombre.setText("");
            textDir.setText("");
            con.obtenerClientes(); // Refrescar la lista de clientes
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo agregar el cliente.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_nuevoButtonActionPerformed

    private void borrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarButtonActionPerformed
        if (con.eliminarClienteActual()) {
            JOptionPane.showMessageDialog(this, "Cliente eliminado exitosamente.");
            //Limpiar los campos de texto
            textNombre.setText("Borrado");
            textDir.setText("Borrado");
            con.obtenerClientes(); // Refrescar la lista de clientes
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo eliminar el cliente.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_borrarButtonActionPerformed

    private void editarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarButtonActionPerformed
        // Obtener el texto modificado de las Ã¡reas de texto
        String nombreNuevo = textNombre.getText().trim();
        String direccionNueva = textDir.getText().trim();

        // Verificar que los campos no estÃ©n vacÃ­os
        if (nombreNuevo.isEmpty() || direccionNueva.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, rellene ambos campos antes de actualizar el cliente.", "Campos vacÃ­os", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Actualizar el cliente en la base de datos
        if (con.actualizarCliente(nombreNuevo, direccionNueva)) {
            JOptionPane.showMessageDialog(this, "Cliente actualizado exitosamente.");
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo actualizar el cliente.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_editarButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionClientesIGU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionClientesIGU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionClientesIGU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionClientesIGU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionClientesIGU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionClientesIGU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionClientesIGU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionClientesIGU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionClientesIGU().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton anteButton;
    private javax.swing.JButton borrarButton;
    private javax.swing.JButton btnExport;
    private javax.swing.JLabel dirLabel;
    private javax.swing.JButton editarButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton nuevoButton;
    private javax.swing.JFrame nuevoFrame;
    private javax.swing.JButton primeroButton;
    private javax.swing.JButton sigButton;
    private javax.swing.JTextArea textDir;
    private javax.swing.JTextArea textNombre;
    private javax.swing.JLabel tituloLabel;
    private javax.swing.JButton ultimoButton;
    // End of variables declaration//GEN-END:variables
}
